from Crypto.Cipher import AES
from Crypto.Util.Padding import pad, unpad
from Crypto.Random import get_random_bytes
import os

# Fungsi untuk mengenkripsi file
def encrypt_file(file_name, key):
    # Baca isi file yang ingin dienkripsi
    with open(file_name, 'rb') as file:
        file_data = file.read()
    
    # Buat cipher AES dengan mode CBC
    cipher = AES.new(key, AES.MODE_CBC)
    
    # Padding data agar panjangnya kelipatan blok AES
    padded_data = pad(file_data, AES.block_size)
    
    # Enkripsi data
    encrypted_data = cipher.encrypt(padded_data)
    
    # Simpan hasil enkripsi ke file baru
    encrypted_file_name = f"{file_name}.enc"
    with open(encrypted_file_name, 'wb') as enc_file:
        enc_file.write(cipher.iv)  # Simpan IV (Initialization Vector) di awal file
        enc_file.write(encrypted_data)

    print(f"File terenkripsi disimpan dengan nama: {encrypted_file_name}")

# Fungsi untuk mendekripsi file
def decrypt_file(file_name, key):
    with open(file_name, 'rb') as enc_file:
        iv = enc_file.read(16)  # Baca IV yang disimpan di awal file
        encrypted_data = enc_file.read()  # Baca data terenkripsi

    cipher = AES.new(key, AES.MODE_CBC, iv)
    
    # Dekripsi data
    decrypted_data = unpad(cipher.decrypt(encrypted_data), AES.block_size)
    
    # Simpan hasil dekripsi ke file baru
    decrypted_file_name = f"{file_name}.dec"
    with open(decrypted_file_name, 'wb') as dec_file:
        dec_file.write(decrypted_data)

    print(f"File didekripsi disimpan dengan nama: {decrypted_file_name}")

# Key enkripsi (ini adalah contoh, sebaiknya key lebih kuat dan lebih aman)
key = get_random_bytes(16)  # AES key 128-bit

# Contoh penggunaan
file_name = "example.txt"  # Ganti dengan file yang ingin kamu enkripsi
encrypt_file(file_name, key)
decrypt_file(f"{file_name}.enc", key)
